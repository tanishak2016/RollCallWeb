
<div class="container" id="containerTop">
    <div class="row">
        <div class="col-4">
            <div id="totaldiv"><label id="total" class=lbl></label></div>
        </div>
        <div class="col-4">
            <div id="presentdiv"><label id="totalPresent" class=lbl></label></div>
        </div>
        <div class="col-4">
            <div id="absentdiv"><label id="totalAbsent" class=lbl></label></div>
        </div>
    </div>
</div>

        @*<figure class="highcharts-figure">
            <div id="container"></div>

        </figure>*@
        <div id="container"></div>


        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

        @*<script src="https://code.highcharts.com/highcharts.js"></script>
        <script src="https://code.highcharts.com/highcharts-3d.js"></script>
            <script src="https://code.highcharts.com/modules/exporting.js"></script>
            <script src="https://code.highcharts.com/modules/export-data.js"></script>
            <script src="https://code.highcharts.com/modules/accessibility.js"></script>*@


        <script>
    // Set up the chart

            $(document).ready(function () {
                setTimeout(function () {
                    // alert('Reloading Page');
                    location.reload(true);
                }, 10000);
    });

     $(function () {

                 $.ajax({
                url: '@Url.Action("DashboardBarChart", "Candidate", new { area="RollCall"})',
                dataType: "json",
                type: "GET",
                contentType: 'application/json; charset=utf-8',
                async: false,
                processData: false,
                cache: false,
                delay: 15,
                     success: function (data) {
                         debugger;
                         var totalStrenght = 0;
                         var totalPresent = 0;
                         var totalAbsent = 0;
                         var totalPercentage = 0;
                         let series = [];
                         let presentSeries = [];
                         let absentSeries = [];
                         for (let i in data) {
                             let pieData = {};
                             let presentData = {};
                             totalStrenght += data[i].total;
                             pieData.name = data[i].location;
                             pieData.y = data[i].total;
                             presentSeries.push(data[i].present);
                             totalPresent += data[i].present;
                             absentSeries.push(data[i].absent)
                             totalAbsent += data[i].absent;
                             series.push(pieData);

                         }

                         totalPercentage = ((totalPresent / totalStrenght) * 100).toFixed(2);
                         var TotalStrenght = 'Total ' + ':' + totalStrenght + '';
                         var TotalPresent = 'Present ' + ':' + totalPresent + '(' + totalPercentage + '%' + ')';
                         var TotalAbsent = 'Absent' + ':' + totalAbsent + '';
                         $('#total').text(TotalStrenght);
                         $('#totalPresent').text(TotalPresent);
                         $('#totalAbsent').text(TotalAbsent);


                         DrawPieChart(series, presentSeries, absentSeries);
                     },

                error: function (xhr) {
                    alert('error');
                }
            });
        });

    function DrawPieChart(series, presentSeries, absentSeries) {
        debugger;

      //  var seriesLength = series.length;
      //  var presentLength = presentSeries.length;
      //  var absentLength = absentSeries.length;
      // // var tot = 0;
      //  var presents = 0;
      //  var absents=0;
      //  //for (var i = 0; i < seriesLength; i++) {
      //  //    tot += series[i].y;

      //  //}
      //  for (var i = 0; i < presentLength; i++) {
      //      presents += presentSeries[i].present;
      //  }
      //  for (var i = 0; i < absentLength; i++) {
      //      absents += absentSeries[i].absent

      //  }
      ////  var TotalStrenght = 'Total ' + ':' + tot + '';
      //  var TotalPresent = 'Present ' + ':' + presents + '';
      //  var TotalAbsent = 'Absent' + ':' + absents + '';
      //  //$('#total').text(TotalStrenght);
      //  $('#totalPresent').text(TotalPresent);
      //  $('#totalAbsent').text(TotalAbsent);

            var xAxisCategories = $.map(series,(elem) => {
                return elem.name;
            });
            $('#container').highcharts({
                chart: {
                    plotBackgroundColor: null,
                    plotBorderWidth: 1, //null,
                    plotShadow: true
                },
                title: {
                    text: 'Roll Call Data'
                },
                xAxis: {
                    categories: xAxisCategories,
                    crosshair: true
                },
                tooltip: {
                    formatter: function () {
                        //let percent = (100 * this.y) / total;
                        //percent = percent.toFixed(1);
                        //return '<span style="font-size:13px;color:red">' + percent + '% </span>';
                        return '<b></b><br/>' +
                            this.series.name + ': ' + this.y + '<br/>'

                    },
                    //pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
                    //headerFormat: '<span style="font-size:13px;color:red">{point.key}</span><table>',
                    //pointFormat: '<tr href="#">' + '<td style="padding:0;color:red"><b> {100*point.y)/total:.1f}% </b></td></tr>',
                    //footerFormat: '</table>'
                },
                //plotOptions: {
                //    column: {
                //        allowPointSelect: true,
                //        cursor: 'pointer',
                //        dataLabels: {
                //            enabled: true,
                //            format: '<span style=font-size:10px;color:red>{point.namess}{point.y}</span>',

                //        },
                //        showInLegend: true
                //    }
                //},
                series: [{
                    type: 'column',
                    name: 'Total',
                    data: series
                },
                    {
                        type: 'column',
                        name:'Present',
                       // data: [2000, 1500, 2500, 3500, 4000]
                        data: presentSeries
                    }
                    ,
                    {
                        type: 'column',
                        name: 'Absent',
                        data: absentSeries
                    }
                ]
            });
        }
        </script>
        <style>




            .highcharts-figure, .highcharts-data-table table {
                min-width: 310px;
                max-width: 800px;
                margin: 1em auto;
            }

            #container {
                height: 500px;
            }

            .highcharts-data-table table {
                font-family: Verdana, sans-serif;
                border-collapse: collapse;
                border: 1px solid #EBEBEB;
                margin: 10px auto;
                text-align: center;
                width: 100%;
                max-width: 500px;
            }

            .highcharts-data-table caption {
                padding: 1em 0;
                font-size: 1.2em;
                color: #555;
            }

            .highcharts-data-table th {
                font-weight: 600;
                padding: 0.5em;
            }

            .highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {
                padding: 0.5em;
            }

            .highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {
                background: #f8f8f8;
            }

            .highcharts-data-table tr:hover {
                background: #f1f7ff;
            }
        </style>
