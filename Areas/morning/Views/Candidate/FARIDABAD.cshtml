<div class="container" id="containerTop">
    <div class="row">
        <div class="col-3">
            <div id="districtDiv"><label id="districtlabel" class=lbl></label></div>
        </div>
        <div class="col-3">
            <div id="totaldiv"><label id="total" class=lbl></label></div>
        </div>
        <div class="col-3">
            <div id="presentdiv"><label id="totalPresent" class=lbl></label></div>
        </div>
        <div class="col-3">
            <div id="absentdiv"><label id="totalAbsent" class=lbl></label></div>
        </div>
    </div>
</div>

@*<figure class="highcharts-figure">
        <div id="container"></div>

    </figure>*@
<div id="container" class="container">

</div>


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<script type="text/javascript">

    $(document).ready(function () {
        setTimeout(function () {
            // alert('Reloading Page');
            location.reload(true);
        }, 10000);

    });
    $(function () {

            $.ajax({
                url: '@Url.Action("pie", "Candidate", new { area="morning"})',
                dataType: "json",
                type: "POST",
                contentType: 'application/json; charset=utf-8',
                async: false,
                processData: false,
                cache: false,
                delay: 15,
                success: function (data) {

                    var totalStrenght = 0;
                    var totalPresent = 0;
                    var totalAbsent = 0;
                    var totalPercentage = 0;
                   let series = [];
                    let presentSeries = [];
                    let absentSeries = [];
                    for (let i in data) {
                            //let pieData = {};
                            //pieData.name = data[i].name;
                            //pieData.y = data[i].y;
                            //series.push(pieData);


                            if (data[i].location == 'FARIDABAD') {
                                debugger;
                                let pieDataTotal = {};
                                let pieDataPresent = {};
                                let pieDataAbsent = {};
                                let presentData = {};
                                totalStrenght += data[i].total;
                                pieDataTotal.name = 'Total';
                                pieDataTotal.y = data[i].total;
                                series.push(pieDataTotal);
                                pieDataPresent.name = 'Present';
                                pieDataPresent.y = data[i].present;
                                series.push(pieDataPresent);
                                pieDataAbsent.name = 'Absent';
                                pieDataAbsent.y = data[i].absent;
                                series.push(pieDataAbsent);
                               // presentSeries.push(data[i].present);
                                totalPresent += data[i].present;
                                //absentSeries.push(data[i].absent)
                                totalAbsent += data[i].absent;


                                $('#districtlabel').text(data[i].location);

                            }
                            else {

                            }

                    }
                    totalPercentage = ((totalPresent / totalStrenght) * 100).toFixed(2);
                    var TotalStrenght = 'Total ' + ':' + totalStrenght + '';
                    var TotalPresent = 'Present ' + ':' + totalPresent + '(' + totalPercentage + '%' + ')';
                    var TotalAbsent = 'Absent' + ':' + totalAbsent + '';
                    $('#total').text(TotalStrenght);
                    $('#totalPresent').text(TotalPresent);
                    $('#totalAbsent').text(TotalAbsent);



                    DrawPieChart(series);
                },
                error: function (xhr) {
                    alert('error');
                }
            });
    });

    function DrawPieChart(series) {
        //$('#lblPresent').text(series[3].y);
        //$('#lblAbsent').text(series[3].y - series[0].y);

        $('#container').highcharts({
            chart: {
                plotBackgroundColor: null,
                plotBorderWidth: 1, //null,
                plotShadow: true
            },
            title: {
                text: ''
            },
            tooltip: {
            //    pointFormat: '{series.name}: <b>{point.y}</b>'
            },
            plotOptions: {
                pie: {
                    allowPointSelect: true,
                    cursor: 'pointer',
                    dataLabels: {
                        enabled: true,
                        format: '<span style=color:red;font-size:15px><b>{point.name}</b>: {point.y}</span>',

                    },
                    showInLegend: true
                }
            },
            series: [{
                type: 'pie',
                colorByPoint: true,
                name: 'Task Status',
                data: series
            }]
            });
        }
</script>










@*<script>
        $(document).ready(function () {
         $.getJSON("@Url.Action("pie", "Candidate", new { area="RollCall"})", function (data) {
               Highcharts.chart('container', {
                    chart: {
                        type: 'pie',
                        options3d: {
                            enabled: true,
                            alpha: 45,
                            beta: 0
                        }
                    },
                    title: {
                        text: 'RollCall Data'
                    },
                    accessibility: {
                        point: {
                            valueSuffix: '%'
                        }
                    },
                    tooltip: {
                        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
                    },
                    plotOptions: {
                        pie: {
                            allowPointSelect: true,
                            cursor: 'pointer',
                            depth: 35,
                            dataLabels: {
                                enabled: true,
                                format: '{point.name}'
                            }
                        }
                    },
                    series: [{
                        type: 'pie',
                        name: 'Data',
                        data: [{
                            name: 'FPReaderIDResult',
                            y: data.FPReaderIDResult,
                                sliced: true,
                                selected: true
                            },
                            {
                                name: 'QRCodeValidResult',
                                y: data.QRCodeValidResult
                            },
                            {
                                name: 'FaceVerifiedResult',
                                y: data.FaceVerifiedResult
                            }]
                    }]
                });
                    });
                });
    </script>*@















<style>
   

    .highcharts-figure, .highcharts-data-table table {
        min-width: 310px;
        max-width: 800px;
        margin: 1em auto;
    }

    .highcharts-data-table table {
        font-family: Verdana, sans-serif;
        border-collapse: collapse;
        border: 1px solid #EBEBEB;
        margin: 10px auto;
        text-align: center;
        width: 100%;
        max-width: 500px;
    }

    .highcharts-data-table caption {
        padding: 1em 0;
        font-size: 1.2em;
        color: #555;
    }

    .highcharts-data-table th {
        font-weight: 600;
        padding: 0.5em;
    }

    .highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {
        padding: 0.5em;
    }

    .highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {
        background: #f8f8f8;
    }

    .highcharts-data-table tr:hover {
        background: #f1f7ff;
    }
</style>