#pragma checksum "G:\RollCallWeb\Areas\RollCall\Views\Candidate\cylender.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b56878b7687666f16b462b20fbf732e5a6a83771"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_RollCall_Views_Candidate_cylender), @"mvc.1.0.view", @"/Areas/RollCall/Views/Candidate/cylender.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "G:\RollCallWeb\Areas\RollCall\Views\_ViewImports.cshtml"
using RollCall;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "G:\RollCallWeb\Areas\RollCall\Views\_ViewImports.cshtml"
using RollCall.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b56878b7687666f16b462b20fbf732e5a6a83771", @"/Areas/RollCall/Views/Candidate/cylender.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5891ee3185a2b4ebc1b32fc1c65a94a517da5870", @"/Areas/RollCall/Views/_ViewImports.cshtml")]
    public class Areas_RollCall_Views_Candidate_cylender : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n<figure class=\"highcharts-figure\">\r\n    <div id=\"container\"></div>\r\n    \r\n</figure>\r\n\r\n\r\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n\r\n");
            WriteLiteral("\r\n\r\n    <script>\r\n    // Set up the chart\r\n\r\n    $(document).ready(function () {\r\n    });\r\n\r\n     $(function () {\r\n        debugger;\r\n                 $.ajax({\r\n                url: \'");
#nullable restore
#line 26 "G:\RollCallWeb\Areas\RollCall\Views\Candidate\cylender.cshtml"
                 Write(Url.Action("cylender", "Candidate", new { area="RollCall"}));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                dataType: ""json"",
                type: ""POST"",
                contentType: 'application/json; charset=utf-8',
                async: false,
                processData: false,
                cache: false,
                delay: 15,
                success: function (data) {                  
                    debugger;
                    let series = [];                    
                    for (let i in data) {
                        let pieData = {};
                        pieData.name = data[i].name;
                        pieData.y = data[i].y;
                        series.push(pieData);
                    }
                    DrawPieChart(series);
                },
                error: function (xhr) {
                    alert('error');
                }
            });
        });

        function DrawPieChart(series) {
            $('#container').highcharts({

                chart: {
                    plotBackgroundColor: null,
  ");
            WriteLiteral(@"                  plotBorderWidth: 1, //null,
                    plotShadow: false
                },
                title: {
                    text: 'Roll Call Data'
                },
                xAxis: {
                    categories: series.name
                },
                labels: {
                    items: [{
                        html: 'Total fruit consumption',
                        style: {
                            left: '50px',
                            top: '18px',
                            color: ( // theme
                                Highcharts.defaultOptions.title.style &&
                                Highcharts.defaultOptions.title.style.color
                            ) || 'black'
                        }
                    }]
                },
                tooltip: {
                    pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
                },
                plotOptions: {
                    pie: {
 ");
            WriteLiteral(@"                       allowPointSelect: true,
                        cursor: 'pointer',
                        dataLabels: {
                            enabled: true,
                            format: '<b>{point.name}</b>: {point.percentage:.1f} %',

                        },
                        showInLegend: true
                    }
                },
                series: [{
                        type: 'spline',
                        name: 'Average',
                        data: series,
                        marker: {
                            lineWidth: 2,
                            lineColor: Highcharts.getOptions().colors[3],
                            fillColor: 'white'
                        }
                    },
                    {
                        type: 'column',
                        name: ""Task Status"",
                        data:series
                    },
                    {
                        type: 'column',
         ");
            WriteLiteral(@"               name: 'Task Status',
                        data: series
                    },
                    {
                        type: 'column',
                        name: 'Task Status',
                        data: series
                    }
                    
                ]
            });
        }







    //Highcharts.chart('container', {
    //    title: {
    //        text: 'Combination chart'
    //    },
    //    xAxis: {
    //        categories: ['Apples', 'Oranges', 'Pears', 'Bananas', 'Plums']
    //    },
    //    labels: {
    //        items: [{
    //            html: 'Total fruit consumption',
    //            style: {
    //                left: '50px',
    //                top: '18px',
    //                color: ( // theme
    //                    Highcharts.defaultOptions.title.style &&
    //                    Highcharts.defaultOptions.title.style.color
    //                ) || 'black'
    //            }
    //   ");
            WriteLiteral(@"     }]
    //    },
    //    series: [{
    //        type: 'column',
    //        name: 'Jane',
    //        data: [3, 2, 1, 3, 4]
    //    }, {
    //        type: 'column',
    //        name: 'John',
    //        data: [2, 3, 5, 7, 6]
    //    }, {
    //        type: 'column',
    //        name: 'Joe',
    //        data: [4, 3, 3, 9, 0]
    //    }, {
    //        type: 'spline',
    //        name: 'Average',
    //        data: [3, 2.67, 3, 6.33, 3.33],
    //        marker: {
    //            lineWidth: 2,
    //            lineColor: Highcharts.getOptions().colors[3],
    //            fillColor: 'white'
    //        }
    //    }, {
    //        type: 'pie',
    //        name: 'Total consumption',
    //        data: [{
    //            name: 'Jane',
    //            y: 13,
    //            color: Highcharts.getOptions().colors[0] // Jane's color
    //        }, {
    //            name: 'John',
    //            y: 23,
    //            color: High");
            WriteLiteral(@"charts.getOptions().colors[1] // John's color
    //        }, {
    //            name: 'Joe',
    //            y: 19,
    //            color: Highcharts.getOptions().colors[2] // Joe's color
    //        }],
    //        center: [100, 80],
    //        size: 100,
    //        showInLegend: false,
    //        dataLabels: {
    //            enabled: false
    //        }
    //    }]
    //});
    </script>





<style>

    .highcharts-figure, .highcharts-data-table table {
        min-width: 310px;
        max-width: 800px;
        margin: 1em auto;
    }

    #container {
        height: 400px;
    }

    .highcharts-data-table table {
        font-family: Verdana, sans-serif;
        border-collapse: collapse;
        border: 1px solid #EBEBEB;
        margin: 10px auto;
        text-align: center;
        width: 100%;
        max-width: 500px;
    }

    .highcharts-data-table caption {
        padding: 1em 0;
        font-size: 1.2em;
        color: ");
            WriteLiteral(@"#555;
    }

    .highcharts-data-table th {
        font-weight: 600;
        padding: 0.5em;
    }

    .highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {
        padding: 0.5em;
    }

    .highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {
        background: #f8f8f8;
    }

    .highcharts-data-table tr:hover {
        background: #f1f7ff;
    }
    
</style>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
